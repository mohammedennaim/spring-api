version: "3.8"

services:
  db:
    image: postgres:16-alpine
    container_name: spring-postgres-db
    environment:
      POSTGRES_DB: spring_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d spring_db"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: unless-stopped
    networks:
      - spring-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-mvc-app
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://db:5432/spring_db"
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_PROFILES_ACTIVE: docker
      JAVA_OPTS: "-Xms512m -Xmx1024m -Dfile.encoding=UTF-8"
    ports:
      - "8081:8080"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - spring-network
    volumes:
      - app_logs:/usr/local/tomcat/logs

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: spring-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - spring-network

volumes:
  pg_data:
    driver: local
  pgadmin_data:
    driver: local
  app_logs:
    driver: local

networks:
  spring-network:
    driver: bridge